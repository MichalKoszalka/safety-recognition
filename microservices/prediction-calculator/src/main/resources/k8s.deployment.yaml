---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: neural-network-models-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 30Gi
---
apiVersion: apps/v1beta2 # for versions before 1.8.0 use apps/v1beta1
kind: Deployment
metadata:
  name: prediction-calculator
spec:
  selector:
    matchLabels:
      app: prediction-calculator
  replicas: 1 # tells deployment to run 3 pods matching the template
  template: # create pods using pod definition in this template
    metadata:
      labels:
        app: prediction-calculator
      annotations:
        # Just add these annotations to configure Prometheus.
        prometheus.io/scrape: "true"
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port:  "8080"
    spec:
      containers:
        - name: prediction-calculator
          image: michalkoszalka/prediction-calculator:latest
          ports:
            - containerPort: 9000
              name: ui
            - containerPort: 8080
              name: server
            - containerPort: 8081
              name: management
          env:
              - name: KAFKA_BOOTSTRAP
                value: kafka-2.kafka-svc.default.svc.cluster.local:9093
              - name: CASSANDRA_HOST
                value: cassandra-0.cassandra.default.svc.cluster.local
              - name: CASSANDRA_PORT
                value: "9042"
              - name: SERVER_PORT
                value: "8080"
          resources:
            requests:
              memory: "4Gi"
              cpu: 2000m
      volumes:
        - name: models-data
          persistentVolumeClaim:
            claimName: neural-network-models-claim