apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: cassandra
  labels:
    app: cassandra
spec:
  serviceName: cassandra
  replicas: 3
  selector:
    matchLabels:
      app: cassandra
  template:
    metadata:
      labels:
        app: cassandra
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - cassandra
              topologyKey: "kubernetes.io/hostname"
      terminationGracePeriodSeconds: 1800
      containers:
      - name: cassandra
        image: gcr.io/google-samples/cassandra:v13
        imagePullPolicy: Always
        ports:
        - containerPort: 7000
          name: intra-node
        - containerPort: 7001
          name: tls-intra-node
        - containerPort: 7199
          name: jmx
        - containerPort: 9042
          name: cql
        resources:
          limits:
            cpu: "1000m"
            memory: 2Gi
          requests:
           cpu: "1000m"
           memory: 2Gi
        securityContext:
          capabilities:
            add:
              - IPC_LOCK
        lifecycle:
          preStop:
            exec:
              command: 
              - /bin/sh
              - -c
              - nodetool drain
        env:
          - name: MAX_HEAP_SIZE
            value: 1024M
          - name: HEAP_NEWSIZE
            value: 500M
          - name: CASSANDRA_SEEDS
            value: "cassandra-0.cassandra.default.svc.cluster.local"
          - name: CASSANDRA_CLUSTER_NAME
            value: "K8Demo"
          - name: CASSANDRA_DC
            value: "DC1-K8Demo"
          - name: CASSANDRA_RACK
            value: "Rack1-K8Demo"
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
        readinessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - /ready-probe.sh
          initialDelaySeconds: 15
          timeoutSeconds: 5
        # These volume mounts are persistent. They are like inline claims,
        # but not exactly because the names need to match exactly one of
        # the stateful pod volumes.
        volumeMounts:
        - name: cassandra-data
          mountPath: /cassandra_data
        - name: scripts
          mountPath: /usr/local/apache-cassandra/scripts
      - name: cassandra-exporter
        image: "criteord/cassandra_exporter:2.2.2"
        env:
          - name: CASSANDRA_EXPORTER_CONFIG_host
            value: 127.0.0.1:7199
          - name: CASSANDRA_EXPORTER_CONFIG_listenPort
            value: "8080"
          - name: JVM_OPTS
            value: "-XX:MaxRAMFraction=2
                      -XX:+AlwaysPreTouch
                      -Dorg.slf4j.simpleLogger.showDateTime=true
                      -Dorg.slf4j.simpleLogger.dateTimeFormat=\"yyyy-MM-dd'T'HH:mm:ss\"
                      -Dcom.sun.management.jmxremote.ssl=false
                      -Dcom.sun.management.jmxremote.authenticate=false
                      -Dcom.sun.management.jmxremote.port=5555
                      -Dcom.sun.management.jmxremote.local.only=false
                      -Dnetworkaddress.cache.ttl=15"
        ports:
        - name: metrics
          containerPort: 8080
          protocol: TCP
        - name: jmx
          containerPort: 5555
        livenessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 180
        readinessProbe:
          httpGet:
            path: /metrics
            port: 8080
          initialDelaySeconds: 180
          timeoutSeconds: 45
        resources:
          limits:
            cpu: 300m
            memory: 500Mi
          requests:
            cpu: 300m
            memory: 500Mi
        volumeMounts:
        - name: scripts
          mountPath: /usr/local/apache-cassandra/scripts
  # These are converted to volume claims by the controller
  # and mounted at the paths mentioned above.
  # do not use these in production until ssd GCEPersistentDisk or other ssd pd
  volumeClaimTemplates:
  - metadata:
      name: cassandra-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
  - metadata:
      name: scripts
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
  